//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Proxy, SourceAssemblyKey="Clock.Y2008.M05, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c131bbd27e23e9e" +
    "8")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Robotics.Clock.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="ClockState")]
    public class ClockState : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public ClockState() {
        }
        
        private double _Longitude;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public double Longitude {
            get {
                return this._Longitude;
            }
            set {
                this._Longitude = value;
            }
        }
        
        private double _Latitude;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public double Latitude {
            get {
                return this._Latitude;
            }
            set {
                this._Latitude = value;
            }
        }
        
        private string _TimeZoneId;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public string TimeZoneId {
            get {
                return this._TimeZoneId;
            }
            set {
                this._TimeZoneId = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current ClockState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.ClockState typedTarget = ((global::Robotics.Clock.Proxy.ClockState)(target));
            typedTarget._Longitude = this._Longitude;
            typedTarget._Latitude = this._Latitude;
            typedTarget._TimeZoneId = this._TimeZoneId;
        }
        
        /// <summary>
        ///Clones ClockState
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.ClockState target0 = new global::Robotics.Clock.Proxy.ClockState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current ClockState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            writer.Write(this._Longitude);
            writer.Write(this._Latitude);
            if ((this._TimeZoneId == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._TimeZoneId);
            }
        }
        
        /// <summary>
        ///Deserializes ClockState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized ClockState</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._Longitude = reader.ReadDouble();
            this._Latitude = reader.ReadDouble();
            if ((reader.ReadByte() != 0)) {
                this._TimeZoneId = reader.ReadString();
            }
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="GetCurrentDateTimeRequest")]
    public class GetCurrentDateTimeRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public GetCurrentDateTimeRequest() {
        }
        
        /// <summary>
        ///Copies the data member values of the current GetCurrentDateTimeRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest typedTarget = ((global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest)(target));
        }
        
        /// <summary>
        ///Clones GetCurrentDateTimeRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest target0 = new global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current GetCurrentDateTimeRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
        }
        
        /// <summary>
        ///Deserializes GetCurrentDateTimeRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized GetCurrentDateTimeRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="DateTimeResponse")]
    public class DateTimeResponse : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public DateTimeResponse() {
        }
        
        private global::System.DateTime _ReturnDateTime;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::System.DateTime ReturnDateTime {
            get {
                return this._ReturnDateTime;
            }
            set {
                this._ReturnDateTime = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current DateTimeResponse to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.DateTimeResponse typedTarget = ((global::Robotics.Clock.Proxy.DateTimeResponse)(target));
            typedTarget._ReturnDateTime = this._ReturnDateTime;
        }
        
        /// <summary>
        ///Clones DateTimeResponse
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.DateTimeResponse target0 = new global::Robotics.Clock.Proxy.DateTimeResponse();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current DateTimeResponse to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._ReturnDateTime, writer);
        }
        
        /// <summary>
        ///Deserializes DateTimeResponse
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized DateTimeResponse</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._ReturnDateTime = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="CreateDateTimeRequest")]
    public class CreateDateTimeRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public CreateDateTimeRequest() {
        }
        
        private int _Year;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Year {
            get {
                return this._Year;
            }
            set {
                this._Year = value;
            }
        }
        
        private int _Month;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Month {
            get {
                return this._Month;
            }
            set {
                this._Month = value;
            }
        }
        
        private int _Day;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Day {
            get {
                return this._Day;
            }
            set {
                this._Day = value;
            }
        }
        
        private int _Hour;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Hour {
            get {
                return this._Hour;
            }
            set {
                this._Hour = value;
            }
        }
        
        private int _Minute;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Minute {
            get {
                return this._Minute;
            }
            set {
                this._Minute = value;
            }
        }
        
        private int _Second;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Second {
            get {
                return this._Second;
            }
            set {
                this._Second = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current CreateDateTimeRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.CreateDateTimeRequest typedTarget = ((global::Robotics.Clock.Proxy.CreateDateTimeRequest)(target));
            typedTarget._Year = this._Year;
            typedTarget._Month = this._Month;
            typedTarget._Day = this._Day;
            typedTarget._Hour = this._Hour;
            typedTarget._Minute = this._Minute;
            typedTarget._Second = this._Second;
        }
        
        /// <summary>
        ///Clones CreateDateTimeRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.CreateDateTimeRequest target0 = new global::Robotics.Clock.Proxy.CreateDateTimeRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current CreateDateTimeRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            writer.Write(this._Year);
            writer.Write(this._Month);
            writer.Write(this._Day);
            writer.Write(this._Hour);
            writer.Write(this._Minute);
            writer.Write(this._Second);
        }
        
        /// <summary>
        ///Deserializes CreateDateTimeRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized CreateDateTimeRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._Year = reader.ReadInt32();
            this._Month = reader.ReadInt32();
            this._Day = reader.ReadInt32();
            this._Hour = reader.ReadInt32();
            this._Minute = reader.ReadInt32();
            this._Second = reader.ReadInt32();
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="CreateDateRequest")]
    public class CreateDateRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public CreateDateRequest() {
        }
        
        private int _Year;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Year {
            get {
                return this._Year;
            }
            set {
                this._Year = value;
            }
        }
        
        private int _Month;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Month {
            get {
                return this._Month;
            }
            set {
                this._Month = value;
            }
        }
        
        private int _Day;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public int Day {
            get {
                return this._Day;
            }
            set {
                this._Day = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current CreateDateRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.CreateDateRequest typedTarget = ((global::Robotics.Clock.Proxy.CreateDateRequest)(target));
            typedTarget._Year = this._Year;
            typedTarget._Month = this._Month;
            typedTarget._Day = this._Day;
        }
        
        /// <summary>
        ///Clones CreateDateRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.CreateDateRequest target0 = new global::Robotics.Clock.Proxy.CreateDateRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current CreateDateRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            writer.Write(this._Year);
            writer.Write(this._Month);
            writer.Write(this._Day);
        }
        
        /// <summary>
        ///Deserializes CreateDateRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized CreateDateRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._Year = reader.ReadInt32();
            this._Month = reader.ReadInt32();
            this._Day = reader.ReadInt32();
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="DateFromStringRequest")]
    [global::System.ComponentModel.DisplayNameAttribute("String Date")]
    public class DateFromStringRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public DateFromStringRequest() {
        }
        
        private string _DateString;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        public string DateString {
            get {
                return this._DateString;
            }
            set {
                this._DateString = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current DateFromStringRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.DateFromStringRequest typedTarget = ((global::Robotics.Clock.Proxy.DateFromStringRequest)(target));
            typedTarget._DateString = this._DateString;
        }
        
        /// <summary>
        ///Clones DateFromStringRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.DateFromStringRequest target0 = new global::Robotics.Clock.Proxy.DateFromStringRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current DateFromStringRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._DateString == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._DateString);
            }
        }
        
        /// <summary>
        ///Deserializes DateFromStringRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized DateFromStringRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._DateString = reader.ReadString();
            }
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="SunriseTimeRequest")]
    public class SunriseTimeRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SunriseTimeRequest() {
        }
        
        private global::System.DateTime _SunriseDate;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::System.DateTime SunriseDate {
            get {
                return this._SunriseDate;
            }
            set {
                this._SunriseDate = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SunriseTimeRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.SunriseTimeRequest typedTarget = ((global::Robotics.Clock.Proxy.SunriseTimeRequest)(target));
            typedTarget._SunriseDate = this._SunriseDate;
        }
        
        /// <summary>
        ///Clones SunriseTimeRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.SunriseTimeRequest target0 = new global::Robotics.Clock.Proxy.SunriseTimeRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SunriseTimeRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._SunriseDate, writer);
        }
        
        /// <summary>
        ///Deserializes SunriseTimeRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SunriseTimeRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._SunriseDate = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="SunsetTimeRequest")]
    public class SunsetTimeRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SunsetTimeRequest() {
        }
        
        private global::System.DateTime _SunsetDate;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::System.DateTime SunsetDate {
            get {
                return this._SunsetDate;
            }
            set {
                this._SunsetDate = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SunsetTimeRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.SunsetTimeRequest typedTarget = ((global::Robotics.Clock.Proxy.SunsetTimeRequest)(target));
            typedTarget._SunsetDate = this._SunsetDate;
        }
        
        /// <summary>
        ///Clones SunsetTimeRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.SunsetTimeRequest target0 = new global::Robotics.Clock.Proxy.SunsetTimeRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SunsetTimeRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._SunsetDate, writer);
        }
        
        /// <summary>
        ///Deserializes SunsetTimeRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SunsetTimeRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._SunsetDate = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="IsDaylightRequest")]
    public class IsDaylightRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public IsDaylightRequest() {
        }
        
        /// <summary>
        ///Copies the data member values of the current IsDaylightRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.IsDaylightRequest typedTarget = ((global::Robotics.Clock.Proxy.IsDaylightRequest)(target));
        }
        
        /// <summary>
        ///Clones IsDaylightRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.IsDaylightRequest target0 = new global::Robotics.Clock.Proxy.IsDaylightRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current IsDaylightRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
        }
        
        /// <summary>
        ///Deserializes IsDaylightRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized IsDaylightRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="IsDaylightResponse")]
    public class IsDaylightResponse : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public IsDaylightResponse() {
        }
        
        private bool _IsDaylight;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public bool IsDaylight {
            get {
                return this._IsDaylight;
            }
            set {
                this._IsDaylight = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current IsDaylightResponse to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.IsDaylightResponse typedTarget = ((global::Robotics.Clock.Proxy.IsDaylightResponse)(target));
            typedTarget._IsDaylight = this._IsDaylight;
        }
        
        /// <summary>
        ///Clones IsDaylightResponse
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.IsDaylightResponse target0 = new global::Robotics.Clock.Proxy.IsDaylightResponse();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current IsDaylightResponse to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            writer.Write(this._IsDaylight);
        }
        
        /// <summary>
        ///Deserializes IsDaylightResponse
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized IsDaylightResponse</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._IsDaylight = reader.ReadBoolean();
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="SetAlarmRequest")]
    public class SetAlarmRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SetAlarmRequest() {
        }
        
        public SetAlarmRequest(string name, global::System.DateTime alarmDateTime) {
            this._Name = name;
            this._AlarmDateTime = alarmDateTime;
        }
        
        private string _Name;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        private global::System.DateTime _AlarmDateTime;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=2)]
        public global::System.DateTime AlarmDateTime {
            get {
                return this._AlarmDateTime;
            }
            set {
                this._AlarmDateTime = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SetAlarmRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.SetAlarmRequest typedTarget = ((global::Robotics.Clock.Proxy.SetAlarmRequest)(target));
            typedTarget._Name = this._Name;
            typedTarget._AlarmDateTime = this._AlarmDateTime;
        }
        
        /// <summary>
        ///Clones SetAlarmRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.SetAlarmRequest target0 = new global::Robotics.Clock.Proxy.SetAlarmRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SetAlarmRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Name == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Name);
            }
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._AlarmDateTime, writer);
        }
        
        /// <summary>
        ///Deserializes SetAlarmRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SetAlarmRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Name = reader.ReadString();
            }
            this._AlarmDateTime = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="DailyAlarmRequest")]
    public class DailyAlarmRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public DailyAlarmRequest() {
        }
        
        public DailyAlarmRequest(string name, global::System.DateTime startDate, global::System.DateTime endDate, int interval, global::Robotics.Clock.Proxy.DaysOfWeek daysOfWeek) {
            this._Name = name;
            this._StartDate = startDate;
            this._EndDate = endDate;
            this._Interval = interval;
            this._DaysOfWeek = daysOfWeek;
        }
        
        private string _Name;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        private global::System.DateTime _StartDate;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=2)]
        public global::System.DateTime StartDate {
            get {
                return this._StartDate;
            }
            set {
                this._StartDate = value;
            }
        }
        
        private global::System.DateTime _EndDate;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=3)]
        public global::System.DateTime EndDate {
            get {
                return this._EndDate;
            }
            set {
                this._EndDate = value;
            }
        }
        
        private int _Interval;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=4)]
        public int Interval {
            get {
                return this._Interval;
            }
            set {
                this._Interval = value;
            }
        }
        
        private global::Robotics.Clock.Proxy.DaysOfWeek _DaysOfWeek;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=5)]
        public global::Robotics.Clock.Proxy.DaysOfWeek DaysOfWeek {
            get {
                return this._DaysOfWeek;
            }
            set {
                this._DaysOfWeek = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current DailyAlarmRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.DailyAlarmRequest typedTarget = ((global::Robotics.Clock.Proxy.DailyAlarmRequest)(target));
            typedTarget._Name = this._Name;
            typedTarget._StartDate = this._StartDate;
            typedTarget._EndDate = this._EndDate;
            typedTarget._Interval = this._Interval;
            typedTarget._DaysOfWeek = this._DaysOfWeek;
        }
        
        /// <summary>
        ///Clones DailyAlarmRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.DailyAlarmRequest target0 = new global::Robotics.Clock.Proxy.DailyAlarmRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current DailyAlarmRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Name == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Name);
            }
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._StartDate, writer);
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._EndDate, writer);
            writer.Write(this._Interval);
            writer.Write(((int)(this._DaysOfWeek)));
        }
        
        /// <summary>
        ///Deserializes DailyAlarmRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized DailyAlarmRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Name = reader.ReadString();
            }
            this._StartDate = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            this._EndDate = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            this._Interval = reader.ReadInt32();
            this._DaysOfWeek = ((global::Robotics.Clock.Proxy.DaysOfWeek)(reader.ReadInt32()));
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="WeeklyAlarmRequest")]
    public class WeeklyAlarmRequest : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public WeeklyAlarmRequest() {
        }
        
        public WeeklyAlarmRequest(string name, global::System.DateTime startDate, global::System.DateTime endDate, int interval, global::Robotics.Clock.Proxy.DaysOfWeek daysOfWeek) {
            this._Name = name;
            this._StartDate = startDate;
            this._EndDate = endDate;
            this._Interval = interval;
            this._DaysOfWeek = daysOfWeek;
        }
        
        private string _Name;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        private global::System.DateTime _StartDate;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=2)]
        public global::System.DateTime StartDate {
            get {
                return this._StartDate;
            }
            set {
                this._StartDate = value;
            }
        }
        
        private global::System.DateTime _EndDate;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=3)]
        public global::System.DateTime EndDate {
            get {
                return this._EndDate;
            }
            set {
                this._EndDate = value;
            }
        }
        
        private int _Interval;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=4)]
        public int Interval {
            get {
                return this._Interval;
            }
            set {
                this._Interval = value;
            }
        }
        
        private global::Robotics.Clock.Proxy.DaysOfWeek _DaysOfWeek;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(IsRequired=true, Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=5)]
        public global::Robotics.Clock.Proxy.DaysOfWeek DaysOfWeek {
            get {
                return this._DaysOfWeek;
            }
            set {
                this._DaysOfWeek = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current WeeklyAlarmRequest to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.WeeklyAlarmRequest typedTarget = ((global::Robotics.Clock.Proxy.WeeklyAlarmRequest)(target));
            typedTarget._Name = this._Name;
            typedTarget._StartDate = this._StartDate;
            typedTarget._EndDate = this._EndDate;
            typedTarget._Interval = this._Interval;
            typedTarget._DaysOfWeek = this._DaysOfWeek;
        }
        
        /// <summary>
        ///Clones WeeklyAlarmRequest
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.WeeklyAlarmRequest target0 = new global::Robotics.Clock.Proxy.WeeklyAlarmRequest();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current WeeklyAlarmRequest to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Name == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Name);
            }
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._StartDate, writer);
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._EndDate, writer);
            writer.Write(this._Interval);
            writer.Write(((int)(this._DaysOfWeek)));
        }
        
        /// <summary>
        ///Deserializes WeeklyAlarmRequest
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized WeeklyAlarmRequest</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Name = reader.ReadString();
            }
            this._StartDate = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            this._EndDate = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            this._Interval = reader.ReadInt32();
            this._DaysOfWeek = ((global::Robotics.Clock.Proxy.DaysOfWeek)(reader.ReadInt32()));
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="AlarmCompletedMessage")]
    public class AlarmCompletedMessage : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public AlarmCompletedMessage() {
        }
        
        public AlarmCompletedMessage(string name, global::System.DateTime alarmDateTime) {
            this._Name = name;
            this._AlarmDateTime = alarmDateTime;
        }
        
        private string _Name;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public string Name {
            get {
                return this._Name;
            }
            set {
                this._Name = value;
            }
        }
        
        private global::System.DateTime _AlarmDateTime;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=2)]
        public global::System.DateTime AlarmDateTime {
            get {
                return this._AlarmDateTime;
            }
            set {
                this._AlarmDateTime = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current AlarmCompletedMessage to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.AlarmCompletedMessage typedTarget = ((global::Robotics.Clock.Proxy.AlarmCompletedMessage)(target));
            typedTarget._Name = this._Name;
            typedTarget._AlarmDateTime = this._AlarmDateTime;
        }
        
        /// <summary>
        ///Clones AlarmCompletedMessage
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.AlarmCompletedMessage target0 = new global::Robotics.Clock.Proxy.AlarmCompletedMessage();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current AlarmCompletedMessage to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Name == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Name);
            }
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._AlarmDateTime, writer);
        }
        
        /// <summary>
        ///Deserializes AlarmCompletedMessage
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized AlarmCompletedMessage</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Name = reader.ReadString();
            }
            this._AlarmDateTime = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="SunriseMessage")]
    public class SunriseMessage : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SunriseMessage() {
        }
        
        private global::System.DateTime _SunriseTime;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::System.DateTime SunriseTime {
            get {
                return this._SunriseTime;
            }
            set {
                this._SunriseTime = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SunriseMessage to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.SunriseMessage typedTarget = ((global::Robotics.Clock.Proxy.SunriseMessage)(target));
            typedTarget._SunriseTime = this._SunriseTime;
        }
        
        /// <summary>
        ///Clones SunriseMessage
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.SunriseMessage target0 = new global::Robotics.Clock.Proxy.SunriseMessage();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SunriseMessage to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._SunriseTime, writer);
        }
        
        /// <summary>
        ///Deserializes SunriseMessage
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SunriseMessage</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._SunriseTime = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="SunsetMessage")]
    public class SunsetMessage : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public SunsetMessage() {
        }
        
        private global::System.DateTime _SunsetTime;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        public global::System.DateTime SunsetTime {
            get {
                return this._SunsetTime;
            }
            set {
                this._SunsetTime = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current SunsetMessage to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.Clock.Proxy.SunsetMessage typedTarget = ((global::Robotics.Clock.Proxy.SunsetMessage)(target));
            typedTarget._SunsetTime = this._SunsetTime;
        }
        
        /// <summary>
        ///Clones SunsetMessage
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.Clock.Proxy.SunsetMessage target0 = new global::Robotics.Clock.Proxy.SunsetMessage();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current SunsetMessage to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.SerializeDateTime(this._SunsetTime, writer);
        }
        
        /// <summary>
        ///Deserializes SunsetMessage
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized SunsetMessage</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            this._SunsetTime = global::Microsoft.Dss.Services.Serializer.BinarySerializationHelper.DeserializeDateTime(reader);
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Subscribe : global::Microsoft.Dss.ServiceModel.Dssp.Subscribe<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType>> {
        
        public Subscribe() {
        }
        
        public Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body) : 
                base(body) {
        }
        
        public Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Get : global::Microsoft.Dss.ServiceModel.Dssp.Get<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Ccr.Core.PortSet<global::Robotics.Clock.Proxy.ClockState, global:: W3C.Soap.Fault>> {
        
        public Get() {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Ccr.Core.PortSet<global::Robotics.Clock.Proxy.ClockState, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DisplayNameAttribute("CurrentDateTime")]
    [global::System.ComponentModel.DescriptionAttribute("Returns the current date and time")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class GetCurrentDateTime : global::Microsoft.Dss.ServiceModel.Dssp.Submit<global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse>> {
        
        public GetCurrentDateTime() {
        }
        
        public GetCurrentDateTime(global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest body) : 
                base(body) {
        }
        
        public GetCurrentDateTime(global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class CreateDateTime : global::Microsoft.Dss.ServiceModel.Dssp.Submit<global::Robotics.Clock.Proxy.CreateDateTimeRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse>> {
        
        public CreateDateTime() {
        }
        
        public CreateDateTime(global::Robotics.Clock.Proxy.CreateDateTimeRequest body) : 
                base(body) {
        }
        
        public CreateDateTime(global::Robotics.Clock.Proxy.CreateDateTimeRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DescriptionAttribute("Create a DateTime with time portion = 0:0:00")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class CreateDate : global::Microsoft.Dss.ServiceModel.Dssp.Submit<global::Robotics.Clock.Proxy.CreateDateRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse>> {
        
        public CreateDate() {
        }
        
        public CreateDate(global::Robotics.Clock.Proxy.CreateDateRequest body) : 
                base(body) {
        }
        
        public CreateDate(global::Robotics.Clock.Proxy.CreateDateRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DescriptionAttribute("Create a DateTime from a string")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class CreateDateTimeFromString : global::Microsoft.Dss.ServiceModel.Dssp.Submit<global::Robotics.Clock.Proxy.DateFromStringRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse>> {
        
        public CreateDateTimeFromString() {
        }
        
        public CreateDateTimeFromString(global::Robotics.Clock.Proxy.DateFromStringRequest body) : 
                base(body) {
        }
        
        public CreateDateTimeFromString(global::Robotics.Clock.Proxy.DateFromStringRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DisplayNameAttribute("SunriseTime")]
    [global::System.ComponentModel.DescriptionAttribute("Returns the sunrise time for the date specified as input")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class GetSunriseTime : global::Microsoft.Dss.ServiceModel.Dssp.Submit<global::Robotics.Clock.Proxy.SunriseTimeRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse>> {
        
        public GetSunriseTime() {
        }
        
        public GetSunriseTime(global::Robotics.Clock.Proxy.SunriseTimeRequest body) : 
                base(body) {
        }
        
        public GetSunriseTime(global::Robotics.Clock.Proxy.SunriseTimeRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DisplayNameAttribute("SunsetTime")]
    [global::System.ComponentModel.DescriptionAttribute("Returns the sunset time for the date specified as input")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class GetSunsetTime : global::Microsoft.Dss.ServiceModel.Dssp.Query<global::Robotics.Clock.Proxy.SunsetTimeRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse>> {
        
        public GetSunsetTime() {
        }
        
        public GetSunsetTime(global::Robotics.Clock.Proxy.SunsetTimeRequest body) : 
                base(body) {
        }
        
        public GetSunsetTime(global::Robotics.Clock.Proxy.SunsetTimeRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DescriptionAttribute("Calculates whether the current time is between sunrise and sunset")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class IsDaylight : global::Microsoft.Dss.ServiceModel.Dssp.Submit<global::Robotics.Clock.Proxy.IsDaylightRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.IsDaylightResponse>> {
        
        public IsDaylight() {
        }
        
        public IsDaylight(global::Robotics.Clock.Proxy.IsDaylightRequest body) : 
                base(body) {
        }
        
        public IsDaylight(global::Robotics.Clock.Proxy.IsDaylightRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.IsDaylightResponse> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class SetAlarm : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Robotics.Clock.Proxy.SetAlarmRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public SetAlarm() {
        }
        
        public SetAlarm(global::Robotics.Clock.Proxy.SetAlarmRequest body) : 
                base(body) {
        }
        
        public SetAlarm(global::Robotics.Clock.Proxy.SetAlarmRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class SetDailyAlarm : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Robotics.Clock.Proxy.DailyAlarmRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public SetDailyAlarm() {
        }
        
        public SetDailyAlarm(global::Robotics.Clock.Proxy.DailyAlarmRequest body) : 
                base(body) {
        }
        
        public SetDailyAlarm(global::Robotics.Clock.Proxy.DailyAlarmRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class SetWeeklyAlarm : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Robotics.Clock.Proxy.WeeklyAlarmRequest, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public SetWeeklyAlarm() {
        }
        
        public SetWeeklyAlarm(global::Robotics.Clock.Proxy.WeeklyAlarmRequest body) : 
                base(body) {
        }
        
        public SetWeeklyAlarm(global::Robotics.Clock.Proxy.WeeklyAlarmRequest body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class AlarmCompleted : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Robotics.Clock.Proxy.AlarmCompletedMessage, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public AlarmCompleted() {
        }
        
        public AlarmCompleted(global::Robotics.Clock.Proxy.AlarmCompletedMessage body) : 
                base(body) {
        }
        
        public AlarmCompleted(global::Robotics.Clock.Proxy.AlarmCompletedMessage body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DescriptionAttribute("An automatic alarm that fires at sunrise")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Sunrise : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Robotics.Clock.Proxy.SunriseMessage, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public Sunrise() {
        }
        
        public Sunrise(global::Robotics.Clock.Proxy.SunriseMessage body) : 
                base(body) {
        }
        
        public Sunrise(global::Robotics.Clock.Proxy.SunriseMessage body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.ComponentModel.DescriptionAttribute("An automatic alarm that fires at sunset")]
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Sunset : global::Microsoft.Dss.ServiceModel.Dssp.Update<global::Robotics.Clock.Proxy.SunsetMessage, global:: Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType>> {
        
        public Sunset() {
        }
        
        public Sunset(global::Robotics.Clock.Proxy.SunsetMessage body) : 
                base(body) {
        }
        
        public Sunset(global::Robotics.Clock.Proxy.SunsetMessage body, global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class ClockOperations : global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup, global:: Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop, global:: Robotics.Clock.Proxy.Subscribe, global:: Robotics.Clock.Proxy.Get, global:: Robotics.Clock.Proxy.GetCurrentDateTime, global:: Robotics.Clock.Proxy.CreateDateTime, global:: Robotics.Clock.Proxy.CreateDate, global:: Robotics.Clock.Proxy.CreateDateTimeFromString, global:: Robotics.Clock.Proxy.GetSunriseTime, global:: Robotics.Clock.Proxy.GetSunsetTime, global:: Robotics.Clock.Proxy.IsDaylight, global:: Robotics.Clock.Proxy.SetAlarm, global:: Robotics.Clock.Proxy.SetDailyAlarm, global:: Robotics.Clock.Proxy.SetWeeklyAlarm, global:: Robotics.Clock.Proxy.AlarmCompleted, global:: Robotics.Clock.Proxy.Sunrise, global:: Robotics.Clock.Proxy.Sunset, global:: Microsoft.Dss.Core.DsspHttp.HttpPost, global:: Microsoft.Dss.Core.DsspHttp.HttpQuery> {
        
        public ClockOperations() {
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup() {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop() {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType> Subscribe(global::Microsoft.Ccr.Core.IPort notificationPort, params System.Type[] types) {
            global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            global::Robotics.Clock.Proxy.Subscribe operation = new global::Robotics.Clock.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Subscribe(global::Microsoft.Ccr.Core.IPort notificationPort, out global::Robotics.Clock.Proxy.Subscribe operation, params System.Type[] types) {
            global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            operation = new global::Robotics.Clock.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.SubscribeResponseType> Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.IPort notificationPort, params System.Type[] types) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            }
            global::Robotics.Clock.Proxy.Subscribe operation = new global::Robotics.Clock.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Subscribe(global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType body, global::Microsoft.Ccr.Core.IPort notificationPort, out global::Robotics.Clock.Proxy.Subscribe operation, params System.Type[] types) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType();
            }
            operation = new global::Robotics.Clock.Proxy.Subscribe(body);
            operation.NotificationPort = notificationPort;
            if ((types != null)) {
                body.TypeFilter = new string[types.Length];
                for (int index = 0; (index < types.Length); index = (index + 1)) {
                    body.TypeFilter[index] = global::Microsoft.Dss.ServiceModel.DsspServiceBase.DsspServiceBase.GetTypeFilterDescription(types[index]);
                }
            }
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Robotics.Clock.Proxy.ClockState, global:: W3C.Soap.Fault> Get() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::Robotics.Clock.Proxy.Get operation = new global::Robotics.Clock.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(out global::Robotics.Clock.Proxy.Get operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::Robotics.Clock.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Robotics.Clock.Proxy.ClockState, global:: W3C.Soap.Fault> Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::Robotics.Clock.Proxy.Get operation = new global::Robotics.Clock.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::Robotics.Clock.Proxy.Get operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::Robotics.Clock.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> GetCurrentDateTime() {
            global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest body = new global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest();
            global::Robotics.Clock.Proxy.GetCurrentDateTime operation = new global::Robotics.Clock.Proxy.GetCurrentDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice GetCurrentDateTime(out global::Robotics.Clock.Proxy.GetCurrentDateTime operation) {
            global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest body = new global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest();
            operation = new global::Robotics.Clock.Proxy.GetCurrentDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> GetCurrentDateTime(global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest();
            }
            global::Robotics.Clock.Proxy.GetCurrentDateTime operation = new global::Robotics.Clock.Proxy.GetCurrentDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice GetCurrentDateTime(global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest body, out global::Robotics.Clock.Proxy.GetCurrentDateTime operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest();
            }
            operation = new global::Robotics.Clock.Proxy.GetCurrentDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> CreateDateTime() {
            global::Robotics.Clock.Proxy.CreateDateTimeRequest body = new global::Robotics.Clock.Proxy.CreateDateTimeRequest();
            global::Robotics.Clock.Proxy.CreateDateTime operation = new global::Robotics.Clock.Proxy.CreateDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice CreateDateTime(out global::Robotics.Clock.Proxy.CreateDateTime operation) {
            global::Robotics.Clock.Proxy.CreateDateTimeRequest body = new global::Robotics.Clock.Proxy.CreateDateTimeRequest();
            operation = new global::Robotics.Clock.Proxy.CreateDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> CreateDateTime(global::Robotics.Clock.Proxy.CreateDateTimeRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.CreateDateTimeRequest();
            }
            global::Robotics.Clock.Proxy.CreateDateTime operation = new global::Robotics.Clock.Proxy.CreateDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice CreateDateTime(global::Robotics.Clock.Proxy.CreateDateTimeRequest body, out global::Robotics.Clock.Proxy.CreateDateTime operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.CreateDateTimeRequest();
            }
            operation = new global::Robotics.Clock.Proxy.CreateDateTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> CreateDate() {
            global::Robotics.Clock.Proxy.CreateDateRequest body = new global::Robotics.Clock.Proxy.CreateDateRequest();
            global::Robotics.Clock.Proxy.CreateDate operation = new global::Robotics.Clock.Proxy.CreateDate(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice CreateDate(out global::Robotics.Clock.Proxy.CreateDate operation) {
            global::Robotics.Clock.Proxy.CreateDateRequest body = new global::Robotics.Clock.Proxy.CreateDateRequest();
            operation = new global::Robotics.Clock.Proxy.CreateDate(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> CreateDate(global::Robotics.Clock.Proxy.CreateDateRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.CreateDateRequest();
            }
            global::Robotics.Clock.Proxy.CreateDate operation = new global::Robotics.Clock.Proxy.CreateDate(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice CreateDate(global::Robotics.Clock.Proxy.CreateDateRequest body, out global::Robotics.Clock.Proxy.CreateDate operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.CreateDateRequest();
            }
            operation = new global::Robotics.Clock.Proxy.CreateDate(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> CreateDateTimeFromString() {
            global::Robotics.Clock.Proxy.DateFromStringRequest body = new global::Robotics.Clock.Proxy.DateFromStringRequest();
            global::Robotics.Clock.Proxy.CreateDateTimeFromString operation = new global::Robotics.Clock.Proxy.CreateDateTimeFromString(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice CreateDateTimeFromString(out global::Robotics.Clock.Proxy.CreateDateTimeFromString operation) {
            global::Robotics.Clock.Proxy.DateFromStringRequest body = new global::Robotics.Clock.Proxy.DateFromStringRequest();
            operation = new global::Robotics.Clock.Proxy.CreateDateTimeFromString(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> CreateDateTimeFromString(global::Robotics.Clock.Proxy.DateFromStringRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.DateFromStringRequest();
            }
            global::Robotics.Clock.Proxy.CreateDateTimeFromString operation = new global::Robotics.Clock.Proxy.CreateDateTimeFromString(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice CreateDateTimeFromString(global::Robotics.Clock.Proxy.DateFromStringRequest body, out global::Robotics.Clock.Proxy.CreateDateTimeFromString operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.DateFromStringRequest();
            }
            operation = new global::Robotics.Clock.Proxy.CreateDateTimeFromString(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> GetSunriseTime() {
            global::Robotics.Clock.Proxy.SunriseTimeRequest body = new global::Robotics.Clock.Proxy.SunriseTimeRequest();
            global::Robotics.Clock.Proxy.GetSunriseTime operation = new global::Robotics.Clock.Proxy.GetSunriseTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice GetSunriseTime(out global::Robotics.Clock.Proxy.GetSunriseTime operation) {
            global::Robotics.Clock.Proxy.SunriseTimeRequest body = new global::Robotics.Clock.Proxy.SunriseTimeRequest();
            operation = new global::Robotics.Clock.Proxy.GetSunriseTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> GetSunriseTime(global::Robotics.Clock.Proxy.SunriseTimeRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunriseTimeRequest();
            }
            global::Robotics.Clock.Proxy.GetSunriseTime operation = new global::Robotics.Clock.Proxy.GetSunriseTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice GetSunriseTime(global::Robotics.Clock.Proxy.SunriseTimeRequest body, out global::Robotics.Clock.Proxy.GetSunriseTime operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunriseTimeRequest();
            }
            operation = new global::Robotics.Clock.Proxy.GetSunriseTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> GetSunsetTime() {
            global::Robotics.Clock.Proxy.SunsetTimeRequest body = new global::Robotics.Clock.Proxy.SunsetTimeRequest();
            global::Robotics.Clock.Proxy.GetSunsetTime operation = new global::Robotics.Clock.Proxy.GetSunsetTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice GetSunsetTime(out global::Robotics.Clock.Proxy.GetSunsetTime operation) {
            global::Robotics.Clock.Proxy.SunsetTimeRequest body = new global::Robotics.Clock.Proxy.SunsetTimeRequest();
            operation = new global::Robotics.Clock.Proxy.GetSunsetTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.DateTimeResponse> GetSunsetTime(global::Robotics.Clock.Proxy.SunsetTimeRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunsetTimeRequest();
            }
            global::Robotics.Clock.Proxy.GetSunsetTime operation = new global::Robotics.Clock.Proxy.GetSunsetTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice GetSunsetTime(global::Robotics.Clock.Proxy.SunsetTimeRequest body, out global::Robotics.Clock.Proxy.GetSunsetTime operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunsetTimeRequest();
            }
            operation = new global::Robotics.Clock.Proxy.GetSunsetTime(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.IsDaylightResponse> IsDaylight() {
            global::Robotics.Clock.Proxy.IsDaylightRequest body = new global::Robotics.Clock.Proxy.IsDaylightRequest();
            global::Robotics.Clock.Proxy.IsDaylight operation = new global::Robotics.Clock.Proxy.IsDaylight(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice IsDaylight(out global::Robotics.Clock.Proxy.IsDaylight operation) {
            global::Robotics.Clock.Proxy.IsDaylightRequest body = new global::Robotics.Clock.Proxy.IsDaylightRequest();
            operation = new global::Robotics.Clock.Proxy.IsDaylight(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Robotics.Clock.Proxy.IsDaylightResponse> IsDaylight(global::Robotics.Clock.Proxy.IsDaylightRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.IsDaylightRequest();
            }
            global::Robotics.Clock.Proxy.IsDaylight operation = new global::Robotics.Clock.Proxy.IsDaylight(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice IsDaylight(global::Robotics.Clock.Proxy.IsDaylightRequest body, out global::Robotics.Clock.Proxy.IsDaylight operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.IsDaylightRequest();
            }
            operation = new global::Robotics.Clock.Proxy.IsDaylight(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> SetAlarm(string name, global::System.DateTime alarmDateTime) {
            global::Robotics.Clock.Proxy.SetAlarmRequest body = new global::Robotics.Clock.Proxy.SetAlarmRequest(name, alarmDateTime);
            global::Robotics.Clock.Proxy.SetAlarm operation = new global::Robotics.Clock.Proxy.SetAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetAlarm(string name, global::System.DateTime alarmDateTime, out global::Robotics.Clock.Proxy.SetAlarm operation) {
            global::Robotics.Clock.Proxy.SetAlarmRequest body = new global::Robotics.Clock.Proxy.SetAlarmRequest(name, alarmDateTime);
            operation = new global::Robotics.Clock.Proxy.SetAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> SetAlarm(global::Robotics.Clock.Proxy.SetAlarmRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SetAlarmRequest();
            }
            global::Robotics.Clock.Proxy.SetAlarm operation = new global::Robotics.Clock.Proxy.SetAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetAlarm(global::Robotics.Clock.Proxy.SetAlarmRequest body, out global::Robotics.Clock.Proxy.SetAlarm operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SetAlarmRequest();
            }
            operation = new global::Robotics.Clock.Proxy.SetAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> SetDailyAlarm(string name, global::System.DateTime startDate, global::System.DateTime endDate, int interval, global::Robotics.Clock.Proxy.DaysOfWeek daysOfWeek) {
            global::Robotics.Clock.Proxy.DailyAlarmRequest body = new global::Robotics.Clock.Proxy.DailyAlarmRequest(name, startDate, endDate, interval, daysOfWeek);
            global::Robotics.Clock.Proxy.SetDailyAlarm operation = new global::Robotics.Clock.Proxy.SetDailyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetDailyAlarm(string name, global::System.DateTime startDate, global::System.DateTime endDate, int interval, global::Robotics.Clock.Proxy.DaysOfWeek daysOfWeek, out global::Robotics.Clock.Proxy.SetDailyAlarm operation) {
            global::Robotics.Clock.Proxy.DailyAlarmRequest body = new global::Robotics.Clock.Proxy.DailyAlarmRequest(name, startDate, endDate, interval, daysOfWeek);
            operation = new global::Robotics.Clock.Proxy.SetDailyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> SetDailyAlarm(global::Robotics.Clock.Proxy.DailyAlarmRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.DailyAlarmRequest();
            }
            global::Robotics.Clock.Proxy.SetDailyAlarm operation = new global::Robotics.Clock.Proxy.SetDailyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetDailyAlarm(global::Robotics.Clock.Proxy.DailyAlarmRequest body, out global::Robotics.Clock.Proxy.SetDailyAlarm operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.DailyAlarmRequest();
            }
            operation = new global::Robotics.Clock.Proxy.SetDailyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> SetWeeklyAlarm(string name, global::System.DateTime startDate, global::System.DateTime endDate, int interval, global::Robotics.Clock.Proxy.DaysOfWeek daysOfWeek) {
            global::Robotics.Clock.Proxy.WeeklyAlarmRequest body = new global::Robotics.Clock.Proxy.WeeklyAlarmRequest(name, startDate, endDate, interval, daysOfWeek);
            global::Robotics.Clock.Proxy.SetWeeklyAlarm operation = new global::Robotics.Clock.Proxy.SetWeeklyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetWeeklyAlarm(string name, global::System.DateTime startDate, global::System.DateTime endDate, int interval, global::Robotics.Clock.Proxy.DaysOfWeek daysOfWeek, out global::Robotics.Clock.Proxy.SetWeeklyAlarm operation) {
            global::Robotics.Clock.Proxy.WeeklyAlarmRequest body = new global::Robotics.Clock.Proxy.WeeklyAlarmRequest(name, startDate, endDate, interval, daysOfWeek);
            operation = new global::Robotics.Clock.Proxy.SetWeeklyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> SetWeeklyAlarm(global::Robotics.Clock.Proxy.WeeklyAlarmRequest body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.WeeklyAlarmRequest();
            }
            global::Robotics.Clock.Proxy.SetWeeklyAlarm operation = new global::Robotics.Clock.Proxy.SetWeeklyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SetWeeklyAlarm(global::Robotics.Clock.Proxy.WeeklyAlarmRequest body, out global::Robotics.Clock.Proxy.SetWeeklyAlarm operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.WeeklyAlarmRequest();
            }
            operation = new global::Robotics.Clock.Proxy.SetWeeklyAlarm(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> AlarmCompleted(string name, global::System.DateTime alarmDateTime) {
            global::Robotics.Clock.Proxy.AlarmCompletedMessage body = new global::Robotics.Clock.Proxy.AlarmCompletedMessage(name, alarmDateTime);
            global::Robotics.Clock.Proxy.AlarmCompleted operation = new global::Robotics.Clock.Proxy.AlarmCompleted(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice AlarmCompleted(string name, global::System.DateTime alarmDateTime, out global::Robotics.Clock.Proxy.AlarmCompleted operation) {
            global::Robotics.Clock.Proxy.AlarmCompletedMessage body = new global::Robotics.Clock.Proxy.AlarmCompletedMessage(name, alarmDateTime);
            operation = new global::Robotics.Clock.Proxy.AlarmCompleted(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> AlarmCompleted(global::Robotics.Clock.Proxy.AlarmCompletedMessage body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.AlarmCompletedMessage();
            }
            global::Robotics.Clock.Proxy.AlarmCompleted operation = new global::Robotics.Clock.Proxy.AlarmCompleted(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice AlarmCompleted(global::Robotics.Clock.Proxy.AlarmCompletedMessage body, out global::Robotics.Clock.Proxy.AlarmCompleted operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.AlarmCompletedMessage();
            }
            operation = new global::Robotics.Clock.Proxy.AlarmCompleted(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> Sunrise() {
            global::Robotics.Clock.Proxy.SunriseMessage body = new global::Robotics.Clock.Proxy.SunriseMessage();
            global::Robotics.Clock.Proxy.Sunrise operation = new global::Robotics.Clock.Proxy.Sunrise(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Sunrise(out global::Robotics.Clock.Proxy.Sunrise operation) {
            global::Robotics.Clock.Proxy.SunriseMessage body = new global::Robotics.Clock.Proxy.SunriseMessage();
            operation = new global::Robotics.Clock.Proxy.Sunrise(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> Sunrise(global::Robotics.Clock.Proxy.SunriseMessage body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunriseMessage();
            }
            global::Robotics.Clock.Proxy.Sunrise operation = new global::Robotics.Clock.Proxy.Sunrise(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Sunrise(global::Robotics.Clock.Proxy.SunriseMessage body, out global::Robotics.Clock.Proxy.Sunrise operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunriseMessage();
            }
            operation = new global::Robotics.Clock.Proxy.Sunrise(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> Sunset() {
            global::Robotics.Clock.Proxy.SunsetMessage body = new global::Robotics.Clock.Proxy.SunsetMessage();
            global::Robotics.Clock.Proxy.Sunset operation = new global::Robotics.Clock.Proxy.Sunset(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Sunset(out global::Robotics.Clock.Proxy.Sunset operation) {
            global::Robotics.Clock.Proxy.SunsetMessage body = new global::Robotics.Clock.Proxy.SunsetMessage();
            operation = new global::Robotics.Clock.Proxy.Sunset(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<global::Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType> Sunset(global::Robotics.Clock.Proxy.SunsetMessage body) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunsetMessage();
            }
            global::Robotics.Clock.Proxy.Sunset operation = new global::Robotics.Clock.Proxy.Sunset(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Sunset(global::Robotics.Clock.Proxy.SunsetMessage body, out global::Robotics.Clock.Proxy.Sunset operation) {
            if ((body == null)) {
                body = new global::Robotics.Clock.Proxy.SunsetMessage();
            }
            operation = new global::Robotics.Clock.Proxy.Sunset(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpPost() {
            global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType();
            global::Microsoft.Dss.Core.DsspHttp.HttpPost operation = new global::Microsoft.Dss.Core.DsspHttp.HttpPost(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpPost(out global::Microsoft.Dss.Core.DsspHttp.HttpPost operation) {
            global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType();
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpPost(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpPost(global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType();
            }
            global::Microsoft.Dss.Core.DsspHttp.HttpPost operation = new global::Microsoft.Dss.Core.DsspHttp.HttpPost(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpPost(global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType body, out global::Microsoft.Dss.Core.DsspHttp.HttpPost operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpPostRequestType();
            }
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpPost(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpQuery() {
            global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType();
            global::Microsoft.Dss.Core.DsspHttp.HttpQuery operation = new global::Microsoft.Dss.Core.DsspHttp.HttpQuery(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpQuery(out global::Microsoft.Dss.Core.DsspHttp.HttpQuery operation) {
            global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType body = new global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType();
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpQuery(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.Core.DsspHttp.HttpResponseType, global::W3C.Soap.Fault> HttpQuery(global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType();
            }
            global::Microsoft.Dss.Core.DsspHttp.HttpQuery operation = new global::Microsoft.Dss.Core.DsspHttp.HttpQuery(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice HttpQuery(global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType body, out global::Microsoft.Dss.Core.DsspHttp.HttpQuery operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.Core.DsspHttp.HttpQueryRequestType();
            }
            operation = new global::Microsoft.Dss.Core.DsspHttp.HttpQuery(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/clock.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/clock.html", ElementName="DaysOfWeek")]
    [global::System.FlagsAttribute()]
    public enum DaysOfWeek : int {
        
        Zero = 0,
        
        Sunday = 1,
        
        Monday = 2,
        
        Tuesday = 4,
        
        Wednesday = 8,
        
        Thursday = 16,
        
        Friday = 32,
        
        Saturday = 64,
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("The Clock Service")]
    [global::System.ComponentModel.DisplayNameAttribute("Clock")]
    public class Contract {
        
        public const string Identifier = "http://house.robot/2008/05/clock.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://house.robot/2008/05/clock.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://house.robot/2008/05/clock.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.ClockOperations = new global::Robotics.Clock.Proxy.ClockOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.ClockOperations, "http://house.robot/2008/05/clock.html", "ClockOperations", ""));
        }
        
        public global::Robotics.Clock.Proxy.ClockOperations ClockOperations;
    }
}
