//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="Clock.Y2008.M05, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c131bbd27e23e9e" +
    "8")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformClock {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.ClockState), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_ClockState_TO_Robotics_Clock_ClockState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.ClockState), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_ClockState_TO_Robotics_Clock_Proxy_ClockState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_GetCurrentDateTimeRequest_TO_Robotics_Clock_GetCurrentDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.GetCurrentDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_GetCurrentDateTimeRequest_TO_Robotics_Clock_Proxy_GetCurrentDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.DateTimeResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_DateTimeResponse_TO_Robotics_Clock_DateTimeResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.DateTimeResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_DateTimeResponse_TO_Robotics_Clock_Proxy_DateTimeResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.CreateDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_CreateDateTimeRequest_TO_Robotics_Clock_CreateDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.CreateDateTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_CreateDateTimeRequest_TO_Robotics_Clock_Proxy_CreateDateTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.CreateDateRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_CreateDateRequest_TO_Robotics_Clock_CreateDateRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.CreateDateRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_CreateDateRequest_TO_Robotics_Clock_Proxy_CreateDateRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.DateFromStringRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_DateFromStringRequest_TO_Robotics_Clock_DateFromStringRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.DateFromStringRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_DateFromStringRequest_TO_Robotics_Clock_Proxy_DateFromStringRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.SunriseTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_SunriseTimeRequest_TO_Robotics_Clock_SunriseTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.SunriseTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_SunriseTimeRequest_TO_Robotics_Clock_Proxy_SunriseTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.SunsetTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_SunsetTimeRequest_TO_Robotics_Clock_SunsetTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.SunsetTimeRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_SunsetTimeRequest_TO_Robotics_Clock_Proxy_SunsetTimeRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.IsDaylightRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_IsDaylightRequest_TO_Robotics_Clock_IsDaylightRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.IsDaylightRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_IsDaylightRequest_TO_Robotics_Clock_Proxy_IsDaylightRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.IsDaylightResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_IsDaylightResponse_TO_Robotics_Clock_IsDaylightResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.IsDaylightResponse), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_IsDaylightResponse_TO_Robotics_Clock_Proxy_IsDaylightResponse));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.SetAlarmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_SetAlarmRequest_TO_Robotics_Clock_SetAlarmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.SetAlarmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_SetAlarmRequest_TO_Robotics_Clock_Proxy_SetAlarmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.DailyAlarmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_DailyAlarmRequest_TO_Robotics_Clock_DailyAlarmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.DailyAlarmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_DailyAlarmRequest_TO_Robotics_Clock_Proxy_DailyAlarmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.WeeklyAlarmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_WeeklyAlarmRequest_TO_Robotics_Clock_WeeklyAlarmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.WeeklyAlarmRequest), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_WeeklyAlarmRequest_TO_Robotics_Clock_Proxy_WeeklyAlarmRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.AlarmCompletedMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_AlarmCompletedMessage_TO_Robotics_Clock_AlarmCompletedMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.AlarmCompletedMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_AlarmCompletedMessage_TO_Robotics_Clock_Proxy_AlarmCompletedMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.SunriseMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_SunriseMessage_TO_Robotics_Clock_SunriseMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.SunriseMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_SunriseMessage_TO_Robotics_Clock_Proxy_SunriseMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.Clock.Proxy.SunsetMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_Proxy_SunsetMessage_TO_Robotics_Clock_SunsetMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.Clock.SunsetMessage), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_Clock_SunsetMessage_TO_Robotics_Clock_Proxy_SunsetMessage));
        }
        
        public static object Robotics_Clock_Proxy_ClockState_TO_Robotics_Clock_ClockState(object transformFrom) {
            global::Robotics.Clock.ClockState target = new global::Robotics.Clock.ClockState();
            global::Robotics.Clock.Proxy.ClockState from = ((global::Robotics.Clock.Proxy.ClockState)(transformFrom));
            target.Longitude = from.Longitude;
            target.Latitude = from.Latitude;
            target.TimeZoneId = from.TimeZoneId;
            return target;
        }
        
        public static object Robotics_Clock_ClockState_TO_Robotics_Clock_Proxy_ClockState(object transformFrom) {
            global::Robotics.Clock.Proxy.ClockState target = new global::Robotics.Clock.Proxy.ClockState();
            global::Robotics.Clock.ClockState from = ((global::Robotics.Clock.ClockState)(transformFrom));
            target.Longitude = from.Longitude;
            target.Latitude = from.Latitude;
            target.TimeZoneId = from.TimeZoneId;
            return target;
        }
        
        private static global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest _cachedInstance0 = new global::Robotics.Clock.Proxy.GetCurrentDateTimeRequest();
        
        private static global::Robotics.Clock.GetCurrentDateTimeRequest _cachedInstance = new global::Robotics.Clock.GetCurrentDateTimeRequest();
        
        public static object Robotics_Clock_Proxy_GetCurrentDateTimeRequest_TO_Robotics_Clock_GetCurrentDateTimeRequest(object transformFrom) {
            return _cachedInstance;
        }
        
        public static object Robotics_Clock_GetCurrentDateTimeRequest_TO_Robotics_Clock_Proxy_GetCurrentDateTimeRequest(object transformFrom) {
            return _cachedInstance0;
        }
        
        public static object Robotics_Clock_Proxy_DateTimeResponse_TO_Robotics_Clock_DateTimeResponse(object transformFrom) {
            global::Robotics.Clock.DateTimeResponse target = new global::Robotics.Clock.DateTimeResponse();
            global::Robotics.Clock.Proxy.DateTimeResponse from = ((global::Robotics.Clock.Proxy.DateTimeResponse)(transformFrom));
            target.ReturnDateTime = from.ReturnDateTime;
            return target;
        }
        
        public static object Robotics_Clock_DateTimeResponse_TO_Robotics_Clock_Proxy_DateTimeResponse(object transformFrom) {
            global::Robotics.Clock.Proxy.DateTimeResponse target = new global::Robotics.Clock.Proxy.DateTimeResponse();
            global::Robotics.Clock.DateTimeResponse from = ((global::Robotics.Clock.DateTimeResponse)(transformFrom));
            target.ReturnDateTime = from.ReturnDateTime;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_CreateDateTimeRequest_TO_Robotics_Clock_CreateDateTimeRequest(object transformFrom) {
            global::Robotics.Clock.CreateDateTimeRequest target = new global::Robotics.Clock.CreateDateTimeRequest();
            global::Robotics.Clock.Proxy.CreateDateTimeRequest from = ((global::Robotics.Clock.Proxy.CreateDateTimeRequest)(transformFrom));
            target.Year = from.Year;
            target.Month = from.Month;
            target.Day = from.Day;
            target.Hour = from.Hour;
            target.Minute = from.Minute;
            target.Second = from.Second;
            return target;
        }
        
        public static object Robotics_Clock_CreateDateTimeRequest_TO_Robotics_Clock_Proxy_CreateDateTimeRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.CreateDateTimeRequest target = new global::Robotics.Clock.Proxy.CreateDateTimeRequest();
            global::Robotics.Clock.CreateDateTimeRequest from = ((global::Robotics.Clock.CreateDateTimeRequest)(transformFrom));
            target.Year = from.Year;
            target.Month = from.Month;
            target.Day = from.Day;
            target.Hour = from.Hour;
            target.Minute = from.Minute;
            target.Second = from.Second;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_CreateDateRequest_TO_Robotics_Clock_CreateDateRequest(object transformFrom) {
            global::Robotics.Clock.CreateDateRequest target = new global::Robotics.Clock.CreateDateRequest();
            global::Robotics.Clock.Proxy.CreateDateRequest from = ((global::Robotics.Clock.Proxy.CreateDateRequest)(transformFrom));
            target.Year = from.Year;
            target.Month = from.Month;
            target.Day = from.Day;
            return target;
        }
        
        public static object Robotics_Clock_CreateDateRequest_TO_Robotics_Clock_Proxy_CreateDateRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.CreateDateRequest target = new global::Robotics.Clock.Proxy.CreateDateRequest();
            global::Robotics.Clock.CreateDateRequest from = ((global::Robotics.Clock.CreateDateRequest)(transformFrom));
            target.Year = from.Year;
            target.Month = from.Month;
            target.Day = from.Day;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_DateFromStringRequest_TO_Robotics_Clock_DateFromStringRequest(object transformFrom) {
            global::Robotics.Clock.DateFromStringRequest target = new global::Robotics.Clock.DateFromStringRequest();
            global::Robotics.Clock.Proxy.DateFromStringRequest from = ((global::Robotics.Clock.Proxy.DateFromStringRequest)(transformFrom));
            target.DateString = from.DateString;
            return target;
        }
        
        public static object Robotics_Clock_DateFromStringRequest_TO_Robotics_Clock_Proxy_DateFromStringRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.DateFromStringRequest target = new global::Robotics.Clock.Proxy.DateFromStringRequest();
            global::Robotics.Clock.DateFromStringRequest from = ((global::Robotics.Clock.DateFromStringRequest)(transformFrom));
            target.DateString = from.DateString;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_SunriseTimeRequest_TO_Robotics_Clock_SunriseTimeRequest(object transformFrom) {
            global::Robotics.Clock.SunriseTimeRequest target = new global::Robotics.Clock.SunriseTimeRequest();
            global::Robotics.Clock.Proxy.SunriseTimeRequest from = ((global::Robotics.Clock.Proxy.SunriseTimeRequest)(transformFrom));
            target.SunriseDate = from.SunriseDate;
            return target;
        }
        
        public static object Robotics_Clock_SunriseTimeRequest_TO_Robotics_Clock_Proxy_SunriseTimeRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.SunriseTimeRequest target = new global::Robotics.Clock.Proxy.SunriseTimeRequest();
            global::Robotics.Clock.SunriseTimeRequest from = ((global::Robotics.Clock.SunriseTimeRequest)(transformFrom));
            target.SunriseDate = from.SunriseDate;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_SunsetTimeRequest_TO_Robotics_Clock_SunsetTimeRequest(object transformFrom) {
            global::Robotics.Clock.SunsetTimeRequest target = new global::Robotics.Clock.SunsetTimeRequest();
            global::Robotics.Clock.Proxy.SunsetTimeRequest from = ((global::Robotics.Clock.Proxy.SunsetTimeRequest)(transformFrom));
            target.SunsetDate = from.SunsetDate;
            return target;
        }
        
        public static object Robotics_Clock_SunsetTimeRequest_TO_Robotics_Clock_Proxy_SunsetTimeRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.SunsetTimeRequest target = new global::Robotics.Clock.Proxy.SunsetTimeRequest();
            global::Robotics.Clock.SunsetTimeRequest from = ((global::Robotics.Clock.SunsetTimeRequest)(transformFrom));
            target.SunsetDate = from.SunsetDate;
            return target;
        }
        
        private static global::Robotics.Clock.Proxy.IsDaylightRequest _cachedInstance2 = new global::Robotics.Clock.Proxy.IsDaylightRequest();
        
        private static global::Robotics.Clock.IsDaylightRequest _cachedInstance1 = new global::Robotics.Clock.IsDaylightRequest();
        
        public static object Robotics_Clock_Proxy_IsDaylightRequest_TO_Robotics_Clock_IsDaylightRequest(object transformFrom) {
            return _cachedInstance1;
        }
        
        public static object Robotics_Clock_IsDaylightRequest_TO_Robotics_Clock_Proxy_IsDaylightRequest(object transformFrom) {
            return _cachedInstance2;
        }
        
        public static object Robotics_Clock_Proxy_IsDaylightResponse_TO_Robotics_Clock_IsDaylightResponse(object transformFrom) {
            global::Robotics.Clock.IsDaylightResponse target = new global::Robotics.Clock.IsDaylightResponse();
            global::Robotics.Clock.Proxy.IsDaylightResponse from = ((global::Robotics.Clock.Proxy.IsDaylightResponse)(transformFrom));
            target.IsDaylight = from.IsDaylight;
            return target;
        }
        
        public static object Robotics_Clock_IsDaylightResponse_TO_Robotics_Clock_Proxy_IsDaylightResponse(object transformFrom) {
            global::Robotics.Clock.Proxy.IsDaylightResponse target = new global::Robotics.Clock.Proxy.IsDaylightResponse();
            global::Robotics.Clock.IsDaylightResponse from = ((global::Robotics.Clock.IsDaylightResponse)(transformFrom));
            target.IsDaylight = from.IsDaylight;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_SetAlarmRequest_TO_Robotics_Clock_SetAlarmRequest(object transformFrom) {
            global::Robotics.Clock.SetAlarmRequest target = new global::Robotics.Clock.SetAlarmRequest();
            global::Robotics.Clock.Proxy.SetAlarmRequest from = ((global::Robotics.Clock.Proxy.SetAlarmRequest)(transformFrom));
            target.Name = from.Name;
            target.AlarmDateTime = from.AlarmDateTime;
            return target;
        }
        
        public static object Robotics_Clock_SetAlarmRequest_TO_Robotics_Clock_Proxy_SetAlarmRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.SetAlarmRequest target = new global::Robotics.Clock.Proxy.SetAlarmRequest();
            global::Robotics.Clock.SetAlarmRequest from = ((global::Robotics.Clock.SetAlarmRequest)(transformFrom));
            target.Name = from.Name;
            target.AlarmDateTime = from.AlarmDateTime;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_DailyAlarmRequest_TO_Robotics_Clock_DailyAlarmRequest(object transformFrom) {
            global::Robotics.Clock.DailyAlarmRequest target = new global::Robotics.Clock.DailyAlarmRequest();
            global::Robotics.Clock.Proxy.DailyAlarmRequest from = ((global::Robotics.Clock.Proxy.DailyAlarmRequest)(transformFrom));
            target.Name = from.Name;
            target.StartDate = from.StartDate;
            target.EndDate = from.EndDate;
            target.Interval = from.Interval;
            target.DaysOfWeek = ((global::Robotics.Clock.DaysOfWeek)(((int)(from.DaysOfWeek))));
            return target;
        }
        
        public static object Robotics_Clock_DailyAlarmRequest_TO_Robotics_Clock_Proxy_DailyAlarmRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.DailyAlarmRequest target = new global::Robotics.Clock.Proxy.DailyAlarmRequest();
            global::Robotics.Clock.DailyAlarmRequest from = ((global::Robotics.Clock.DailyAlarmRequest)(transformFrom));
            target.Name = from.Name;
            target.StartDate = from.StartDate;
            target.EndDate = from.EndDate;
            target.Interval = from.Interval;
            target.DaysOfWeek = ((global::Robotics.Clock.Proxy.DaysOfWeek)(((int)(from.DaysOfWeek))));
            return target;
        }
        
        public static object Robotics_Clock_Proxy_WeeklyAlarmRequest_TO_Robotics_Clock_WeeklyAlarmRequest(object transformFrom) {
            global::Robotics.Clock.WeeklyAlarmRequest target = new global::Robotics.Clock.WeeklyAlarmRequest();
            global::Robotics.Clock.Proxy.WeeklyAlarmRequest from = ((global::Robotics.Clock.Proxy.WeeklyAlarmRequest)(transformFrom));
            target.Name = from.Name;
            target.StartDate = from.StartDate;
            target.EndDate = from.EndDate;
            target.Interval = from.Interval;
            target.DaysOfWeek = ((global::Robotics.Clock.DaysOfWeek)(((int)(from.DaysOfWeek))));
            return target;
        }
        
        public static object Robotics_Clock_WeeklyAlarmRequest_TO_Robotics_Clock_Proxy_WeeklyAlarmRequest(object transformFrom) {
            global::Robotics.Clock.Proxy.WeeklyAlarmRequest target = new global::Robotics.Clock.Proxy.WeeklyAlarmRequest();
            global::Robotics.Clock.WeeklyAlarmRequest from = ((global::Robotics.Clock.WeeklyAlarmRequest)(transformFrom));
            target.Name = from.Name;
            target.StartDate = from.StartDate;
            target.EndDate = from.EndDate;
            target.Interval = from.Interval;
            target.DaysOfWeek = ((global::Robotics.Clock.Proxy.DaysOfWeek)(((int)(from.DaysOfWeek))));
            return target;
        }
        
        public static object Robotics_Clock_Proxy_AlarmCompletedMessage_TO_Robotics_Clock_AlarmCompletedMessage(object transformFrom) {
            global::Robotics.Clock.AlarmCompletedMessage target = new global::Robotics.Clock.AlarmCompletedMessage();
            global::Robotics.Clock.Proxy.AlarmCompletedMessage from = ((global::Robotics.Clock.Proxy.AlarmCompletedMessage)(transformFrom));
            target.Name = from.Name;
            target.AlarmDateTime = from.AlarmDateTime;
            return target;
        }
        
        public static object Robotics_Clock_AlarmCompletedMessage_TO_Robotics_Clock_Proxy_AlarmCompletedMessage(object transformFrom) {
            global::Robotics.Clock.Proxy.AlarmCompletedMessage target = new global::Robotics.Clock.Proxy.AlarmCompletedMessage();
            global::Robotics.Clock.AlarmCompletedMessage from = ((global::Robotics.Clock.AlarmCompletedMessage)(transformFrom));
            target.Name = from.Name;
            target.AlarmDateTime = from.AlarmDateTime;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_SunriseMessage_TO_Robotics_Clock_SunriseMessage(object transformFrom) {
            global::Robotics.Clock.SunriseMessage target = new global::Robotics.Clock.SunriseMessage();
            global::Robotics.Clock.Proxy.SunriseMessage from = ((global::Robotics.Clock.Proxy.SunriseMessage)(transformFrom));
            target.SunriseTime = from.SunriseTime;
            return target;
        }
        
        public static object Robotics_Clock_SunriseMessage_TO_Robotics_Clock_Proxy_SunriseMessage(object transformFrom) {
            global::Robotics.Clock.Proxy.SunriseMessage target = new global::Robotics.Clock.Proxy.SunriseMessage();
            global::Robotics.Clock.SunriseMessage from = ((global::Robotics.Clock.SunriseMessage)(transformFrom));
            target.SunriseTime = from.SunriseTime;
            return target;
        }
        
        public static object Robotics_Clock_Proxy_SunsetMessage_TO_Robotics_Clock_SunsetMessage(object transformFrom) {
            global::Robotics.Clock.SunsetMessage target = new global::Robotics.Clock.SunsetMessage();
            global::Robotics.Clock.Proxy.SunsetMessage from = ((global::Robotics.Clock.Proxy.SunsetMessage)(transformFrom));
            target.SunsetTime = from.SunsetTime;
            return target;
        }
        
        public static object Robotics_Clock_SunsetMessage_TO_Robotics_Clock_Proxy_SunsetMessage(object transformFrom) {
            global::Robotics.Clock.Proxy.SunsetMessage target = new global::Robotics.Clock.Proxy.SunsetMessage();
            global::Robotics.Clock.SunsetMessage from = ((global::Robotics.Clock.SunsetMessage)(transformFrom));
            target.SunsetTime = from.SunsetTime;
            return target;
        }
    }
}
