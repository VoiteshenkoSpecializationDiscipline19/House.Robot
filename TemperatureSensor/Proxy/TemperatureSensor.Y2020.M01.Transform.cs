//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
[assembly: global::System.Reflection.AssemblyProductAttribute("TemperatureSensor")]
[assembly: global::System.Reflection.AssemblyTitleAttribute("TemperatureSensor")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="TemperatureSensor.Y2020.M01, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d08" +
    "de2285175fb3a")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformTemperatureSensor {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::TemperatureSensor.Proxy.TemperatureSensorState), new global::Microsoft.Dss.Core.Attributes.Transform(TemperatureSensor_Proxy_TemperatureSensorState_TO_TemperatureSensor_TemperatureSensorState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::TemperatureSensor.TemperatureSensorState), new global::Microsoft.Dss.Core.Attributes.Transform(TemperatureSensor_TemperatureSensorState_TO_TemperatureSensor_Proxy_TemperatureSensorState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::TemperatureSensor.Proxy.ReceiveUpdatesRequest), new global::Microsoft.Dss.Core.Attributes.Transform(TemperatureSensor_Proxy_ReceiveUpdatesRequest_TO_TemperatureSensor_ReceiveUpdatesRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::TemperatureSensor.ReceiveUpdatesRequest), new global::Microsoft.Dss.Core.Attributes.Transform(TemperatureSensor_ReceiveUpdatesRequest_TO_TemperatureSensor_Proxy_ReceiveUpdatesRequest));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::TemperatureSensor.Proxy.TemperatureMessage), new global::Microsoft.Dss.Core.Attributes.Transform(TemperatureSensor_Proxy_TemperatureMessage_TO_TemperatureSensor_TemperatureMessage));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::TemperatureSensor.TemperatureMessage), new global::Microsoft.Dss.Core.Attributes.Transform(TemperatureSensor_TemperatureMessage_TO_TemperatureSensor_Proxy_TemperatureMessage));
        }
        
        public static object TemperatureSensor_Proxy_TemperatureSensorState_TO_TemperatureSensor_TemperatureSensorState(object transformFrom) {
            global::TemperatureSensor.TemperatureSensorState target = new global::TemperatureSensor.TemperatureSensorState();
            global::TemperatureSensor.Proxy.TemperatureSensorState from = ((global::TemperatureSensor.Proxy.TemperatureSensorState)(transformFrom));
            target.Temperature = from.Temperature;
            return target;
        }
        
        public static object TemperatureSensor_TemperatureSensorState_TO_TemperatureSensor_Proxy_TemperatureSensorState(object transformFrom) {
            global::TemperatureSensor.Proxy.TemperatureSensorState target = new global::TemperatureSensor.Proxy.TemperatureSensorState();
            global::TemperatureSensor.TemperatureSensorState from = ((global::TemperatureSensor.TemperatureSensorState)(transformFrom));
            target.Temperature = from.Temperature;
            return target;
        }
        
        public static object TemperatureSensor_Proxy_ReceiveUpdatesRequest_TO_TemperatureSensor_ReceiveUpdatesRequest(object transformFrom) {
            global::TemperatureSensor.ReceiveUpdatesRequest target = new global::TemperatureSensor.ReceiveUpdatesRequest();
            global::TemperatureSensor.Proxy.ReceiveUpdatesRequest from = ((global::TemperatureSensor.Proxy.ReceiveUpdatesRequest)(transformFrom));
            target.Name = from.Name;
            target.Count = from.Count;
            return target;
        }
        
        public static object TemperatureSensor_ReceiveUpdatesRequest_TO_TemperatureSensor_Proxy_ReceiveUpdatesRequest(object transformFrom) {
            global::TemperatureSensor.Proxy.ReceiveUpdatesRequest target = new global::TemperatureSensor.Proxy.ReceiveUpdatesRequest();
            global::TemperatureSensor.ReceiveUpdatesRequest from = ((global::TemperatureSensor.ReceiveUpdatesRequest)(transformFrom));
            target.Name = from.Name;
            target.Count = from.Count;
            return target;
        }
        
        public static object TemperatureSensor_Proxy_TemperatureMessage_TO_TemperatureSensor_TemperatureMessage(object transformFrom) {
            global::TemperatureSensor.TemperatureMessage target = new global::TemperatureSensor.TemperatureMessage();
            global::TemperatureSensor.Proxy.TemperatureMessage from = ((global::TemperatureSensor.Proxy.TemperatureMessage)(transformFrom));
            target.Temperature = from.Temperature;
            return target;
        }
        
        public static object TemperatureSensor_TemperatureMessage_TO_TemperatureSensor_Proxy_TemperatureMessage(object transformFrom) {
            global::TemperatureSensor.Proxy.TemperatureMessage target = new global::TemperatureSensor.Proxy.TemperatureMessage();
            global::TemperatureSensor.TemperatureMessage from = ((global::TemperatureSensor.TemperatureMessage)(transformFrom));
            target.Temperature = from.Temperature;
            return target;
        }
    }
}
