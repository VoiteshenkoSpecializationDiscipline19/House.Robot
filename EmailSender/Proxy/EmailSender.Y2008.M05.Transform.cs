//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Transform, SourceAssemblyKey="EmailSender.Y2008.M05, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c131bbd27" +
    "e23e9e8")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Dss.Transforms.TransformEmailSender {
    
    
    public class Transforms : global::Microsoft.Dss.Core.Transforms.TransformBase {
        
        static Transforms() {
            Register();
        }
        
        public static void Register() {
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.EmailSender.Proxy.EmailSenderState), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_EmailSender_Proxy_EmailSenderState_TO_Robotics_EmailSender_EmailSenderState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.EmailSender.EmailSenderState), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_EmailSender_EmailSenderState_TO_Robotics_EmailSender_Proxy_EmailSenderState));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddProxyTransform(typeof(global::Robotics.EmailSender.Proxy.MailMessageContents), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_EmailSender_Proxy_MailMessageContents_TO_Robotics_EmailSender_MailMessageContents));
            global::Microsoft.Dss.Core.Transforms.TransformBase.AddSourceTransform(typeof(global::Robotics.EmailSender.MailMessageContents), new global::Microsoft.Dss.Core.Attributes.Transform(Robotics_EmailSender_MailMessageContents_TO_Robotics_EmailSender_Proxy_MailMessageContents));
        }
        
        public static object Robotics_EmailSender_Proxy_EmailSenderState_TO_Robotics_EmailSender_EmailSenderState(object transformFrom) {
            global::Robotics.EmailSender.EmailSenderState target = new global::Robotics.EmailSender.EmailSenderState();
            global::Robotics.EmailSender.Proxy.EmailSenderState from = ((global::Robotics.EmailSender.Proxy.EmailSenderState)(transformFrom));
            target.Host = from.Host;
            target.Port = from.Port;
            target.UserName = from.UserName;
            target.Password = from.Password;
            target.EnableSsl = from.EnableSsl;
            return target;
        }
        
        public static object Robotics_EmailSender_EmailSenderState_TO_Robotics_EmailSender_Proxy_EmailSenderState(object transformFrom) {
            global::Robotics.EmailSender.Proxy.EmailSenderState target = new global::Robotics.EmailSender.Proxy.EmailSenderState();
            global::Robotics.EmailSender.EmailSenderState from = ((global::Robotics.EmailSender.EmailSenderState)(transformFrom));
            target.Host = from.Host;
            target.Port = from.Port;
            target.UserName = from.UserName;
            target.Password = from.Password;
            target.EnableSsl = from.EnableSsl;
            return target;
        }
        
        public static object Robotics_EmailSender_Proxy_MailMessageContents_TO_Robotics_EmailSender_MailMessageContents(object transformFrom) {
            global::Robotics.EmailSender.MailMessageContents target = new global::Robotics.EmailSender.MailMessageContents();
            global::Robotics.EmailSender.Proxy.MailMessageContents from = ((global::Robotics.EmailSender.Proxy.MailMessageContents)(transformFrom));
            if ((from.To != null)) {
                int count = from.To.Count;
                global::System.Collections.Generic.List<string> tmp = new global::System.Collections.Generic.List<string>(count);
                tmp.AddRange(from.To);
                target.To = tmp;
            }
            else {
                target.To = null;
            }
            target.From = from.From;
            if ((from.CC != null)) {
                int count0 = from.CC.Count;
                global::System.Collections.Generic.List<string> tmp0 = new global::System.Collections.Generic.List<string>(count0);
                tmp0.AddRange(from.CC);
                target.CC = tmp0;
            }
            else {
                target.CC = null;
            }
            target.Subject = from.Subject;
            target.Message = from.Message;
            return target;
        }
        
        public static object Robotics_EmailSender_MailMessageContents_TO_Robotics_EmailSender_Proxy_MailMessageContents(object transformFrom) {
            global::Robotics.EmailSender.Proxy.MailMessageContents target = new global::Robotics.EmailSender.Proxy.MailMessageContents();
            global::Robotics.EmailSender.MailMessageContents from = ((global::Robotics.EmailSender.MailMessageContents)(transformFrom));
            global::System.Collections.Generic.List<string> tmp = from.To;
            if ((tmp != null)) {
                int count = tmp.Count;
                global::System.Collections.Generic.List<string> tmp0 = new global::System.Collections.Generic.List<string>(count);
                tmp0.AddRange(tmp);
                target.To = tmp0;
            }
            target.From = from.From;
            global::System.Collections.Generic.List<string> tmp1 = from.CC;
            if ((tmp1 != null)) {
                int count0 = tmp1.Count;
                global::System.Collections.Generic.List<string> tmp2 = new global::System.Collections.Generic.List<string>(count0);
                tmp2.AddRange(tmp1);
                target.CC = tmp2;
            }
            target.Subject = from.Subject;
            target.Message = from.Message;
            return target;
        }
    }
}
