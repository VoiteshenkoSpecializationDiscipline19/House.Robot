//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Reflection.AssemblyVersionAttribute("0.0.0.0")]
[assembly: global::Microsoft.Dss.Core.Attributes.ServiceDeclarationAttribute(global::Microsoft.Dss.Core.Attributes.DssServiceDeclaration.Proxy, SourceAssemblyKey="EmailSender.Y2008.M05, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c131bbd27" +
    "e23e9e8")]
[assembly: global::System.Security.SecurityTransparentAttribute()]
[assembly: global::System.Security.SecurityRulesAttribute(global::System.Security.SecurityRuleSet.Level1)]

namespace Robotics.EmailSender.Proxy {
    
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/emailsender.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/emailsender.html", ElementName="EmailSenderState")]
    public class EmailSenderState : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public EmailSenderState() {
        }
        
        public EmailSenderState(string host, int port, string userName, string password, bool enableSsl) {
            this._Host = host;
            this._Port = port;
            this._UserName = userName;
            this._Password = password;
            this._EnableSsl = enableSsl;
        }
        
        private string _Host;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public string Host {
            get {
                return this._Host;
            }
            set {
                this._Host = value;
            }
        }
        
        private int _Port;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=2)]
        public int Port {
            get {
                return this._Port;
            }
            set {
                this._Port = value;
            }
        }
        
        private string _UserName;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=3)]
        public string UserName {
            get {
                return this._UserName;
            }
            set {
                this._UserName = value;
            }
        }
        
        private string _Password;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=4)]
        public string Password {
            get {
                return this._Password;
            }
            set {
                this._Password = value;
            }
        }
        
        private bool _EnableSsl;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=5)]
        public bool EnableSsl {
            get {
                return this._EnableSsl;
            }
            set {
                this._EnableSsl = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current EmailSenderState to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.EmailSender.Proxy.EmailSenderState typedTarget = ((global::Robotics.EmailSender.Proxy.EmailSenderState)(target));
            typedTarget._Host = this._Host;
            typedTarget._Port = this._Port;
            typedTarget._UserName = this._UserName;
            typedTarget._Password = this._Password;
            typedTarget._EnableSsl = this._EnableSsl;
        }
        
        /// <summary>
        ///Clones EmailSenderState
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.EmailSender.Proxy.EmailSenderState target0 = new global::Robotics.EmailSender.Proxy.EmailSenderState();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current EmailSenderState to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._Host == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Host);
            }
            writer.Write(this._Port);
            if ((this._UserName == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._UserName);
            }
            if ((this._Password == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Password);
            }
            writer.Write(this._EnableSsl);
        }
        
        /// <summary>
        ///Deserializes EmailSenderState
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized EmailSenderState</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                this._Host = reader.ReadString();
            }
            this._Port = reader.ReadInt32();
            if ((reader.ReadByte() != 0)) {
                this._UserName = reader.ReadString();
            }
            if ((reader.ReadByte() != 0)) {
                this._Password = reader.ReadString();
            }
            this._EnableSsl = reader.ReadBoolean();
            return this;
        }
    }
    
    [global::Microsoft.Dss.Core.Attributes.DataContractAttribute(Namespace="http://house.robot/2008/05/emailsender.html")]
    [global::System.Xml.Serialization.XmlRootAttribute(Namespace="http://house.robot/2008/05/emailsender.html", ElementName="MailMessageContents")]
    public class MailMessageContents : global::Microsoft.Dss.Core.IDssSerializable, global::System.ICloneable {
        
        public MailMessageContents() {
        }
        
        public MailMessageContents(global::System.Collections.Generic.List<string> to, string from, global::System.Collections.Generic.List<string> cC, string subject, string message) {
            this._To = to;
            this._From = from;
            this._CC = cC;
            this._Subject = subject;
            this._Message = message;
        }
        
        private global::System.Collections.Generic.List<string> _To;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=1)]
        public global::System.Collections.Generic.List<string> To {
            get {
                return this._To;
            }
            set {
                this._To = value;
            }
        }
        
        private string _From;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=2)]
        public string From {
            get {
                return this._From;
            }
            set {
                this._From = value;
            }
        }
        
        private global::System.Collections.Generic.List<string> _CC;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=3)]
        public global::System.Collections.Generic.List<string> CC {
            get {
                return this._CC;
            }
            set {
                this._CC = value;
            }
        }
        
        private string _Subject;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=4)]
        public string Subject {
            get {
                return this._Subject;
            }
            set {
                this._Subject = value;
            }
        }
        
        private string _Message;
        
        [global::Microsoft.Dss.Core.Attributes.DataMemberAttribute(Order=-1)]
        [global::Microsoft.Dss.Core.Attributes.DataMemberConstructorAttribute(Order=5)]
        public string Message {
            get {
                return this._Message;
            }
            set {
                this._Message = value;
            }
        }
        
        /// <summary>
        ///Copies the data member values of the current MailMessageContents to the specified target object
        ///</summary>
        ///<param name="target">target object (must be an instance of)</param>
        public virtual void CopyTo(Microsoft.Dss.Core.IDssSerializable target) {
            global::Robotics.EmailSender.Proxy.MailMessageContents typedTarget = ((global::Robotics.EmailSender.Proxy.MailMessageContents)(target));
            if ((this._To != null)) {
                int count = this._To.Count;
                global::System.Collections.Generic.List<string> tmp = new global::System.Collections.Generic.List<string>(count);
                tmp.AddRange(this._To);
                typedTarget._To = tmp;
            }
            typedTarget._From = this._From;
            if ((this._CC != null)) {
                int count0 = this._CC.Count;
                global::System.Collections.Generic.List<string> tmp0 = new global::System.Collections.Generic.List<string>(count0);
                tmp0.AddRange(this._CC);
                typedTarget._CC = tmp0;
            }
            typedTarget._Subject = this._Subject;
            typedTarget._Message = this._Message;
        }
        
        /// <summary>
        ///Clones MailMessageContents
        ///</summary>
        ///<returns>cloned value</returns>
        public virtual object Clone() {
            global::Robotics.EmailSender.Proxy.MailMessageContents target0 = new global::Robotics.EmailSender.Proxy.MailMessageContents();
            this.CopyTo(target0);
            return target0;
        }
        
        /// <summary>
        ///Serializes the data member values of the current MailMessageContents to the specified writer
        ///</summary>
        ///<param name="writer">the writer to which to serialize</param>
        public virtual void Serialize(System.IO.BinaryWriter writer) {
            if ((this._To == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._To.Count);
                for (int indexTo = 0; (indexTo < this._To.Count); indexTo = (indexTo + 1)) {
                    if ((this._To[indexTo] == null)) {
                        writer.Write(((byte)(0)));
                    }
                    else {
                        writer.Write(((byte)(1)));
                        writer.Write(this._To[indexTo]);
                    }
                }
            }
            if ((this._From == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._From);
            }
            if ((this._CC == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._CC.Count);
                for (int indexCC = 0; (indexCC < this._CC.Count); indexCC = (indexCC + 1)) {
                    if ((this._CC[indexCC] == null)) {
                        writer.Write(((byte)(0)));
                    }
                    else {
                        writer.Write(((byte)(1)));
                        writer.Write(this._CC[indexCC]);
                    }
                }
            }
            if ((this._Subject == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Subject);
            }
            if ((this._Message == null)) {
                writer.Write(((byte)(0)));
            }
            else {
                writer.Write(((byte)(1)));
                writer.Write(this._Message);
            }
        }
        
        /// <summary>
        ///Deserializes MailMessageContents
        ///</summary>
        ///<param name="reader">the reader from which to deserialize</param>
        ///<returns>deserialized MailMessageContents</returns>
        public virtual object Deserialize(System.IO.BinaryReader reader) {
            if ((reader.ReadByte() != 0)) {
                int count1 = reader.ReadInt32();
                this._To = new global::System.Collections.Generic.List<string>(count1);
                for (int index = 0; (index < count1); index = (index + 1)) {
                    this._To.Add(default(string));
                    if ((reader.ReadByte() != 0)) {
                        this._To[index] = reader.ReadString();
                    }
                }
            }
            if ((reader.ReadByte() != 0)) {
                this._From = reader.ReadString();
            }
            if ((reader.ReadByte() != 0)) {
                int count2 = reader.ReadInt32();
                this._CC = new global::System.Collections.Generic.List<string>(count2);
                for (int index0 = 0; (index0 < count2); index0 = (index0 + 1)) {
                    this._CC.Add(default(string));
                    if ((reader.ReadByte() != 0)) {
                        this._CC[index0] = reader.ReadString();
                    }
                }
            }
            if ((reader.ReadByte() != 0)) {
                this._Subject = reader.ReadString();
            }
            if ((reader.ReadByte() != 0)) {
                this._Message = reader.ReadString();
            }
            return this;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class Get : global::Microsoft.Dss.ServiceModel.Dssp.Get<global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType, global:: Microsoft.Ccr.Core.PortSet<global::Robotics.EmailSender.Proxy.EmailSenderState, global:: W3C.Soap.Fault>> {
        
        public Get() {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) : 
                base(body) {
        }
        
        public Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, global::Microsoft.Ccr.Core.PortSet<global::Robotics.EmailSender.Proxy.EmailSenderState, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class SendMessage : global::Microsoft.Dss.ServiceModel.Dssp.Submit<global::Robotics.EmailSender.Proxy.MailMessageContents, global:: Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultSubmitResponseType, global:: W3C.Soap.Fault>> {
        
        public SendMessage() {
        }
        
        public SendMessage(global::Robotics.EmailSender.Proxy.MailMessageContents body) : 
                base(body) {
        }
        
        public SendMessage(global::Robotics.EmailSender.Proxy.MailMessageContents body, global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultSubmitResponseType, global:: W3C.Soap.Fault> responsePort) : 
                base(body, responsePort) {
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public class EmailSenderOperations : global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup, global:: Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop, global:: Robotics.EmailSender.Proxy.Get, global:: Robotics.EmailSender.Proxy.SendMessage> {
        
        public EmailSenderOperations() {
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup() {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.LookupResponse, global::W3C.Soap.Fault> DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultLookup(global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.LookupRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop() {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultDropResponseType, global::W3C.Soap.Fault> DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice DsspDefaultDrop(global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType body, out global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.DropRequestType();
            }
            operation = new global::Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Robotics.EmailSender.Proxy.EmailSenderState, global:: W3C.Soap.Fault> Get() {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            global::Robotics.EmailSender.Proxy.Get operation = new global::Robotics.EmailSender.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(out global::Robotics.EmailSender.Proxy.Get operation) {
            global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            operation = new global::Robotics.EmailSender.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Robotics.EmailSender.Proxy.EmailSenderState, global:: W3C.Soap.Fault> Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            global::Robotics.EmailSender.Proxy.Get operation = new global::Robotics.EmailSender.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice Get(global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType body, out global::Robotics.EmailSender.Proxy.Get operation) {
            if ((body == null)) {
                body = new global::Microsoft.Dss.ServiceModel.Dssp.GetRequestType();
            }
            operation = new global::Robotics.EmailSender.Proxy.Get(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultSubmitResponseType, global:: W3C.Soap.Fault> SendMessage(global::System.Collections.Generic.List<string> to, string from, global::System.Collections.Generic.List<string> cC, string subject, string message) {
            global::Robotics.EmailSender.Proxy.MailMessageContents body = new global::Robotics.EmailSender.Proxy.MailMessageContents(to, from, cC, subject, message);
            global::Robotics.EmailSender.Proxy.SendMessage operation = new global::Robotics.EmailSender.Proxy.SendMessage(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SendMessage(global::System.Collections.Generic.List<string> to, string from, global::System.Collections.Generic.List<string> cC, string subject, string message, out global::Robotics.EmailSender.Proxy.SendMessage operation) {
            global::Robotics.EmailSender.Proxy.MailMessageContents body = new global::Robotics.EmailSender.Proxy.MailMessageContents(to, from, cC, subject, message);
            operation = new global::Robotics.EmailSender.Proxy.SendMessage(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.PortSet<global::Microsoft.Dss.ServiceModel.Dssp.DefaultSubmitResponseType, global:: W3C.Soap.Fault> SendMessage(global::Robotics.EmailSender.Proxy.MailMessageContents body) {
            if ((body == null)) {
                body = new global::Robotics.EmailSender.Proxy.MailMessageContents();
            }
            global::Robotics.EmailSender.Proxy.SendMessage operation = new global::Robotics.EmailSender.Proxy.SendMessage(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
        
        public virtual global::Microsoft.Ccr.Core.Choice SendMessage(global::Robotics.EmailSender.Proxy.MailMessageContents body, out global::Robotics.EmailSender.Proxy.SendMessage operation) {
            if ((body == null)) {
                body = new global::Robotics.EmailSender.Proxy.MailMessageContents();
            }
            operation = new global::Robotics.EmailSender.Proxy.SendMessage(body);
            this.Post(operation);
            return operation.ResponsePort;
        }
    }
    
    [global::System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    [global::System.ComponentModel.DescriptionAttribute("The EmailSender Service")]
    [global::System.ComponentModel.DisplayNameAttribute("EmailSender")]
    public class Contract {
        
        public const string Identifier = "http://house.robot/2008/05/emailsender.html";
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="service">service path</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, string service, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://house.robot/2008/05/emailsender.html", service);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
        
        /// <summary>Creates a new instance of the service.</summary>
        /// <param name="constructorServicePort">Service constructor port</param>
        /// <param name="partners">the partners of the service instance</param>
        /// <returns>create service response port</returns>
        public static global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> CreateService(global::Microsoft.Dss.Services.Constructor.ConstructorPort constructorServicePort, params Microsoft.Dss.ServiceModel.Dssp.PartnerType[] partners) {
            global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse> result = new global::Microsoft.Dss.ServiceModel.Dssp.DsspResponsePort<Microsoft.Dss.ServiceModel.Dssp.CreateResponse>();
            global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType serviceInfo = new global::Microsoft.Dss.ServiceModel.Dssp.ServiceInfoType("http://house.robot/2008/05/emailsender.html", null);
            if ((partners != null)) {
                serviceInfo.PartnerList = new System.Collections.Generic.List<Microsoft.Dss.ServiceModel.Dssp.PartnerType>(partners);
            }
            global::Microsoft.Dss.Services.Constructor.Create create = new global::Microsoft.Dss.Services.Constructor.Create(serviceInfo, result);
            constructorServicePort.Post(create);
            return result;
        }
    }
    
    public class CombinedOperationsPort : global::Microsoft.Dss.Core.DssCombinedOperationsPort {
        
        public CombinedOperationsPort() {
            this.EmailSenderOperations = new global::Robotics.EmailSender.Proxy.EmailSenderOperations();
            base.Initialize(new global::Microsoft.Dss.Core.DssOperationsPortMetadata(this.EmailSenderOperations, "http://house.robot/2008/05/emailsender.html", "EmailSenderOperations", ""));
        }
        
        public global::Robotics.EmailSender.Proxy.EmailSenderOperations EmailSenderOperations;
    }
}
